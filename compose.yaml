services:
  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
    depends_on:
      - db
      - redis

  db:
    image: postgres:16
    container_name: sa_postgres
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - sa_postgres_data:/var/lib/postgresql/data/

  redis:
    image: redis:latest
    container_name: sa_redis
    ports:
      - "6379:6379"
    volumes:
      - sa_redis_data:/data
    restart: always

  celery:
    build: .
    command: celery -A your_project_name worker --loglevel=info
    volumes:
      - .:/app
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
    depends_on:
      - db
      - redis

#  celery-beat:
#    build: .
#    command: celery -A your_project_name beat --loglevel=info
#    volumes:
#      - .:/app
#    environment:
#      - POSTGRES_DB=your_db_name
#      - POSTGRES_USER=your_db_user
#      - POSTGRES_PASSWORD=your_db_password
#      - REDIS_HOST=redis
#    depends_on:
#      - db
#      - redis

volumes:
  sa_postgres_data:
  sa_redis_data: